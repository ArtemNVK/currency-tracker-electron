[{"C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\index.js":"1","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\App.js":"2","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\screens\\MainWindow\\MainWindow.js":"3","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\customHooks\\useFetchCurrencyRates.js":"4","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\screens\\MainWindow\\DropdownButton\\DropdownButton.js":"5","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\customHooks\\useFetchCurrencySymbols.js":"6","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\customHooks\\useFetchCurrencyFlag.js":"7","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\screens\\MainWindow\\CurrencyDetails\\CurrencyDetails.js":"8"},{"size":203,"mtime":1636177972029,"results":"9","hashOfConfig":"10"},{"size":144,"mtime":1636173291362,"results":"11","hashOfConfig":"10"},{"size":1254,"mtime":1636173362308,"results":"12","hashOfConfig":"10"},{"size":712,"mtime":1636177967490,"results":"13","hashOfConfig":"10"},{"size":1536,"mtime":1636173912294,"results":"14","hashOfConfig":"10"},{"size":723,"mtime":1636166736721,"results":"15","hashOfConfig":"10"},{"size":1526,"mtime":1636175849075,"results":"16","hashOfConfig":"10"},{"size":951,"mtime":1636174920058,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11tro1e",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\index.js",[],"C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\App.js",[],"C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\screens\\MainWindow\\MainWindow.js",[],"C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\customHooks\\useFetchCurrencyRates.js",[],"C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\screens\\MainWindow\\DropdownButton\\DropdownButton.js",["36"],"import React, { useEffect, useState } from 'react'\r\nimport useFetchCurrencySymbols from '../../../customHooks/useFetchCurrencySymbols';\r\nimport styles from './DropdownButton.module.css';\r\n\r\nexport default function DropdownButton({rates, setCurrencyToDisplay}) {\r\n    const [open, setOpen] = useState(false);\r\n    // fetch currency symbols\r\n    const {\r\n        symbols,\r\n        loading,\r\n        error\r\n    } = useFetchCurrencySymbols();\r\n\r\n    const handleOpenDropdown = () => {\r\n        setOpen(prevState => !prevState);\r\n    }\r\n\r\n    const handleSelectCurrency = (key, value) => {\r\n        setCurrencyToDisplay({abbreviation: key, name: value});\r\n        setOpen(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <p>Loading ...</p>}\r\n            {error && <p>Something went wrong ...</p>}\r\n            {symbols && \r\n                <div className={styles.container}>\r\n                    <button className={styles.click} onClick={() => handleOpenDropdown()}>Select currency</button>\r\n                    <div className={!open ? styles.list : styles.newList}>\r\n                        {Object.entries(symbols).map(([key, value]) => {\r\n                            return (\r\n                                <button key={key} className={styles.rates} onClick={() => handleSelectCurrency(key, value)}>{value}</button>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\customHooks\\useFetchCurrencySymbols.js",[],"C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\customHooks\\useFetchCurrencyFlag.js",["37","38"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function useFetchCurrencyFlag(currency) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [flagLoading, setFlagLoading] = useState(true)\r\n  const [flagError, setFlagError] = useState(false)\r\n  const [countries, setCountries] = useState(null)\r\n  const [country, setCountry] = useState(null);\r\n  const [flag, setFlag] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setError(false)\r\n    axios({\r\n        method: 'GET',\r\n        url: 'http://country.io/currency.json',\r\n    }).then(res => {\r\n       setCountries(res.data)\r\n       const fetchCountry = Object.keys(countries).find(key => countries[key] === currency.abbreviation);\r\n       setCountry(fetchCountry.toLowerCase());\r\n       setLoading(false)\r\n    }).catch(e => {\r\n        if (axios.isCancel(e)) return\r\n        setError(true)\r\n    })\r\n  }, [countries, currency?.abbreviation])\r\n\r\n  useEffect(() => {\r\n    if (country) {\r\n        setFlagLoading(true)\r\n        setFlagError(false)\r\n        axios({\r\n            method: 'GET',\r\n            url: `https://flagcdn.com/32x24/${country}.png`,\r\n        }).then(res => {\r\n           setFlag(res.config.url)\r\n           setFlagLoading(false)\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            setLoading(false)\r\n            setFlagError(true)\r\n        })\r\n    }  \r\n  }, [country]);\r\n\r\n\r\n\r\n  return { flagLoading, flagError, flag }\r\n}\r\n","C:\\Users\\kindl\\Desktop\\currency-tracker-electron\\src\\screens\\MainWindow\\CurrencyDetails\\CurrencyDetails.js",[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":17},{"ruleId":"39","severity":1,"message":"44","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":15},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used."]